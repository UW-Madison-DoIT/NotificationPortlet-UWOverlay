<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd">


    <context:annotation-config/>
    <context:component-scan base-package="org.jasig.portlet.notice.util"/>

    <!-- Properties configuration -->
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" lazy-init="false">
        <property name="locations">
            <list>
                <value>classpath:configuration.properties</value>
            </list>
        </property>
    </bean>

    <!-- 
     | Message source for this application. 
     +-->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basenames">
            <list>
                <value>messages</value>
            </list>
        </property>
    </bean>

    <!-- EHCache Configuration -->
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
    <bean id="notificationResponseCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"
        p:cacheManager-ref="cacheManager" p:cacheName="notificationResponseCache"/>

    <!-- 
     | view resolvers
     +-->
    <bean id="jspViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order" value="10" />
        <property name="cache" value="true" />
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/jsp/" />
        <property name="suffix" value=".jsp" />
    </bean>
    <bean id="xmlViewResolver" class="org.springframework.web.servlet.view.XmlViewResolver">
        <property name="order" value="1"/>
    </bean>

    <!-- Abstract Default Exception Handler Bean -->
    <bean id="defaultExceptionHandlerTemplate"
        class="org.springframework.web.portlet.handler.SimpleMappingExceptionResolver"
        abstract="true">
        <property name="defaultErrorView" value="defError"/>
        <property name="exceptionMappings">
            <props>
                <prop key="javax.portlet.PortletSecurityException">notAuthorized</prop>
                <prop key="javax.portlet.UnavailableException">notAvailable</prop>
            </props>
        </property>
    </bean>
    
    <!-- 
     | Notification Service Beans
     |
     | Reference these as needed within portlet contexts, or optionally define 
     | additional service beans there.
     +-->

    <!-- ClassLoader:  Use 'ClassLoaderResourceNotificationService.locations' preference to specify location of data files -->
    <bean id="classLoaderResourceNotificationService" class="org.jasig.portlet.notice.service.classloader.ClassLoaderResourceNotificationService">
        <property name="name" value="classLoaderResourceNotificationService"/>
    </bean>
    <bean id="ClassLoaderResourceNotificationService.responseCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"
        p:cacheManager-ref="cacheManager" p:cacheName="ClassLoaderResourceNotificationService.responseCache"/>

    <!-- Rome (RSS/Atom):  Use 'RomeNotificationService.urls' preference to specify feeds -->
    <bean id="romeNotificationService" class="org.jasig.portlet.notice.service.rome.RomeNotificationService">
        <property name="name" value="romeNoticationService"/>
    </bean>
    <bean id="RomeNotificationService.feedCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"
        p:cacheManager-ref="cacheManager" p:cacheName="RomeNotificationService.feedCache"/>
        
    <!-- RESTful JSON:  Use 'RestfulJsonNotificationService.serviceUrls' preference  to specify services -->
    <bean id="restfulJsonNotificationService" class="org.jasig.portlet.notice.service.rest.RestfulJsonNotificationService">
        <property name="name" value="restfulJsonNotificationService"/>
        <!-- For HTTP Basic AuthN -->
        <property name="usernameEvaluator">
            <bean class="org.jasig.portlet.notice.service.rest.StringLiteralParameterEvaluator" p:value="${restfulJsonNotificationService.basicauth.username}"/>
        </property>
        <property name="passwordEvaluator">
            <bean class="org.jasig.portlet.notice.service.rest.StringLiteralParameterEvaluator" p:value="${restfulJsonNotificationService.basicauth.password}"/>
        </property>
        <property name="urlParameters">
            <util:map>
                <entry key="username">
                    <bean class="org.jasig.portlet.notice.service.rest.UserAttributeParameterEvaluator">
                        <property name="userAttributeKey" value="user.login.id"/>
                    </bean>
                </entry>
		<!-- START MODIFICATIONS for UW -->
                <entry key="groups">
                    <bean class="org.jasig.portlet.notice.service.rest.UserAttributeParameterEvaluator">
                        <property name="userAttributeKey" value="ismemberof"/>
                    </bean>
                </entry>
		<!-- END MODIFICATIONS for UW -->
            </util:map>
        </property>
        <property name="restTemplate">
            <bean class="org.springframework.web.client.RestTemplate">
                <property name="requestFactory">
                    <bean class="org.springframework.http.client.CommonsClientHttpRequestFactory">
                        <property name="httpClient" ref="httpClient" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
    <bean id="httpConnectionManager" class="org.apache.commons.httpclient.MultiThreadedHttpConnectionManager" destroy-method="shutdown">
        <property name="params">
            <bean class="org.apache.commons.httpclient.params.HttpConnectionManagerParams">
                <property name="defaultMaxConnectionsPerHost" value="200" />
                <property name="maxTotalConnections" value="1000"/>
            </bean>
        </property>
    </bean>
    <bean id="httpClient" class="org.apache.commons.httpclient.HttpClient">
        <constructor-arg ref="httpConnectionManager" />
    </bean>

    <!-- PortletEvent:  Use 'NotificationLifecycleController.doEvents' preference to turn on event processing for a portlet definition -->
    <bean id="portletEventNotificationService" class="org.jasig.portlet.notice.service.event.PortletEventNotificationService">
        <property name="name" value="portletEventNotificationService"/>
    </bean>
    <bean id="PortletEventNotificationService.responseCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean"
        p:cacheManager-ref="cacheManager" p:cacheName="PortletEventNotificationService.responseCache"/>

    <!-- DEMO -->
    <bean id="demoNotifications" class="org.jasig.portlet.notice.service.classloader.DemoNotificationService">
        <property name="name" value="demoNotifications"/>
        <property name="active" value="true"/>
    </bean>
    <bean id="demoEmergencyAlerts" class="org.jasig.portlet.notice.service.classloader.DemoNotificationService">
        <property name="name" value="demoEmergencyAlerts"/>
        <property name="active" value="false"/> <!-- The emergency alerts demo can be activated by the EmergencyAlertAdminController. -->
    </bean>

</beans>
